scalar UUID
scalar DateTime

type Query {
    recommendation(id: UUID!): Recommendation
    recommendations(customerId: UUID!, paging: Paging = {page: 0, size: 10}): [Recommendation]
}

input Paging {
    page: Int
    size: Int
}

type Mutation {
    recommend(customerId: UUID!): [Recommendation]
}

type Recommendation {
    id: UUID!
    customerId: UUID!
    product: Product
    score: Int!
    type: RecommendationType!
    dateTime: DateTime!
}
enum RecommendationType {
    TOP_PRODUCTS,
    VERTICAL
}

type Product {
    id: Int!
    name: String!
    type: ProductType!
    vertical: Vertical!
    price: Float
    margin: Float
}

enum ProductType {
    SUBSCRIPTION,
    SERVICE
}

enum Vertical {
    LAUNDRY,
    BEAUTY,
    FIT,
    RELAX
}